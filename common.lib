
welcomeMessage() {
	echo '------------------------------------------'
	echo 'Welcome to gsBuilder 0.0.1'
	echo ''
	echo 'For Help: [gsBuilder --help {command}]'
	echo '------------------------------------------'
	echo ''
}

gsHelp() {

	inputCommand=$1
	echo "You can create new Project as:"
	echo '------------------------------------------'		
	echo "./gsBuilder --createProject [path] [projectName]"
	echo '------------------------------------------'
	echo ''
	echo '------------------------------------------'	
	echo "e:g; ./gsBuilder --createProject . testApp"
	echo '------------------------------------------'
}

gsCreateProject() {
	
	path=$1
	projectName=$2

	projectPath="$path/$projectName"


	if [ "$path" ==  "" ]; then		
		echo "Invalid Path: [$path]"
		exit;
	elif [ "$projectName" ==  "" ]; then
		echo "Invalid ProjectName: [$projectName]"
		exit;
	else	
		echo "Creating Project [${projectPath}], Please wait..."
		echo ''
		
		if [ -d $projectPath ]
		then
		    echo "Project [$projectPath] already exists"
		else
		    mkdir -p $projectPath
		    cd $projectPath
		    git clone 'https://github.com/angular/quickstart'
		    
		    mv quickstart/* .
		    rm -rf quickstart

		    echo '------------------------------------------------'
		    echo "Project [$projectPath] Created Successfully."
		    echo '------------------------------------------------'
		fi

	fi
}


gsCreateComponent() {

	path=$1
	componentName=$2

	componentPath="$path/$componentName"

	if [ "$path" ==  "" ]; then		
		echo "Invalid Path: [$path]"
		exit;
	elif [ "$componentName" ==  "" ]; then
		echo "Invalid componentName: [$componentName]"
		exit;
	else	
		
		if [ -d $componentPath ]
		then
		    echo "Component [$componentPath] already exists"
		else
			mkdir -p $componentPath
			cd $componentPath

			filename="$componentName.component.ts"
			touch $filename

			componentStart="$(echo "$componentName" | sed 's/.*/\u&/')"
			componentEnd="Component"			

			componentClass=$componentStart$componentEnd
			echo "import { Component } from '@angular/core';" >> $filename
			echo "" >> $filename

			echo "@Component({"                          >> $filename
			echo "	selector: 'my-$componentName',"      >> $filename
			echo "	template: '<h1>$componentName</h1>'" >> $filename
			echo "})"                                    >> $filename
			echo "export class $componentClass {}"       >> $filename


		    echo '------------------------------------------------'
			echo "component created: [$componentPath] Successfully.	"						
			echo '------------------------------------------------'
		fi
		
	fi	
}

gsCreateService() {

	path=$1
	serviceName=$2

	servicePath="$path/$serviceName"
	filename="$serviceName.service.ts"

	filepath="$servicePath/$filename"

	if [ "$path" ==  "" ]; then		
		echo "Invalid Path: [$path]"
		exit;
	elif [ "$serviceName" ==  "" ]; then
		echo "Invalid serviceName: [$serviceName]"
		exit;
	else	
		
		if [ -e "$filepath" ]; then
		    echo "service [$filepath] already exists"
		else

			if [ -d $servicePath ]; then
				echo "Service Directoy [$servicePath] already Exists"				
			else
				echo "Creating Service Directoy [$servicePath]"
				mkdir -p $servicePath
			fi
				
			cd $servicePath

			touch $filename

			serviceStart="$(echo "$serviceName" | sed 's/.*/\u&/')"
			serviceEnd="Service"			

			serviceClass=$serviceStart$serviceEnd
			
			echo "import { Injectable } from '@angular/core';" >> $filename
			echo ""                                            >> $filename
			echo "@Injectable()"                               >> $filename
			echo "export class $serviceClass {"                >> $filename
			echo "}"                                           >> $filename
			
		    echo '------------------------------------------------'
			echo "service created: [$servicePath] Successfully.	"						
			echo '------------------------------------------------'
		fi
		
	fi	
}